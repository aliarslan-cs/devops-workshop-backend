steps:
  - id: 'hello world'
    name: ubuntu:20.04
    args:
      - echo
      - hello world

  - id: 'Show docker credentials'
    name: ubuntu:20.04
    entrypoint: bash
    args:
      - '-c'
      - |
        echo    'dockerhub organisation:  $_DOCKERHUB_ORGANISATION' \
        && echo 'dockerhub repository:    $_DOCKERHUB_REPOSITORY' \
        && echo 'dockerhub username:      $_DOCKERHUB_USERNAME' \
        && echo 'dockerhub token:         $$DOCKERHUB_TOKEN'
    secretEnv: ['DOCKERHUB_TOKEN']

  - id: 'Show default substitutions'
    name: ubuntu:20.04
    entrypoint: bash
    args:
      - '-c'
      - |
        echo    "ID of Cloud project:     ${PROJECT_ID}" \
        && echo "ID of build:             ${BUILD_ID}" \
        && echo "project number:          ${PROJECT_NUMBER}" \
        && echo "trigger name:            ${TRIGGER_NAME}" \
        && echo "commit ID:               ${COMMIT_SHA}" \
        && echo "short SHA:               ${SHORT_SHA}" \
        && echo "name of repository:      ${REPO_NAME}" \
        && echo "name of branch:          ${BRANCH_NAME}" \
        && echo "name of tag:             ${TAG_NAME}" \
        && echo "build config file:       ${TRIGGER_BUILD_CONFIG_PATH}" \
        && echo "head branch of PR:       ${_HEAD_BRANCH}" \
        && echo "base branch of PR:       ${_BASE_BRANCH}" \
        && echo "url of head repo of PR:  ${_HEAD_REPO_URL}" \
        && echo "PR number:               ${_PR_NUMBER}"

  - id: 'Login to dockerhub'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker login --username=$_DOCKERHUB_USERNAME --password=$$DOCKERHUB_TOKEN']
    secretEnv: ['DOCKERHUB_TOKEN']

  - id: 'Build docker image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_DOCKERHUB_ORGANISATION/$_DOCKERHUB_REPOSITORY:$SHORT_SHA', '.']

  - id: 'Show docker images'
    name: 'gcr.io/cloud-builders/docker'
    args: ['images']

  - id: 'Run docker container'
    name: 'gcr.io/cloud-builders/docker'
    args: ['run', '-itd', '-p', '8080:8080', '--network', 'cloudbuild', '--name', '$_DOCKERHUB_REPOSITORY-$SHORT_SHA', '$_DOCKERHUB_ORGANISATION/$_DOCKERHUB_REPOSITORY:$SHORT_SHA']

  - id: 'Show running docker containers'
    name: 'gcr.io/cloud-builders/docker'
    args: ['ps']

  # - id: 'The Curl Test - using Docker'
  #   name: 'gcr.io/cloud-builders/docker'
  #   entrypoint: 'bash'
  #   args: ['-c', 'docker', 'run', '-itd', '--network', 'cloudbuild', '--name', 'curl-$SHORT_SHA', 'curlimages/curl', '-sSf', 'http://$_DOCKERHUB_REPOSITORY-$SHORT_SHA:8080/']

  - id: 'The Curl Test'
    name: 'gcr.io/gcp-runtimes/ubuntu_18_0_4'
    entrypoint: 'curl'
    args: ['http://$_DOCKERHUB_REPOSITORY-$SHORT_SHA:8080324/']

  - id: 'Push docker image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_DOCKERHUB_ORGANISATION/$_DOCKERHUB_REPOSITORY:$SHORT_SHA']

substitutions:
  _DOCKERHUB_ORGANISATION: "aliarsal"
  _DOCKERHUB_USERNAME: "aliarsal"
  _DOCKERHUB_REPOSITORY: "workshop-project-backend"

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/DOCKERHUB_TOKEN/versions/1
    env: 'DOCKERHUB_TOKEN'
